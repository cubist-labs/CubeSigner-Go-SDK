# This scripts applies any post-generation corrections to models
# generated by oapi-codegen.

import re
import subprocess

FILENAME = "models.go"

if __name__ == "__main__":
    lines = []
    with open(FILENAME, "r") as f:
        lines = f.readlines()

    newLines = []
    for i, line in enumerate(lines):
        line = line.strip()
        line = re.sub(r"\s+", " ", line)

        # ---- start line edits ---- #

        #! Edit 1:
        # Billing event is part of OrgMetricDiscriminant enum as well as its own type.
        # To fix this redeclaration we rename the enum constant.
        if line == "BillingEvent OrgMetricDiscriminants = \"BillingEvent\"":
            line = "BillingEventMetric OrgMetricDiscriminants = \"BillingEvent\"\n"

        #! Edit2:
        # Scopes are just strings, we don't need Scope0, Scope1 as aliases for string
        # Rename the auto generated version to ScopeType and introduce Scope as string
        if "type Scope struct" in line:
            newLines.append("type Scope string\n")
            line = line.replace("Scope", "ScopeType")
        # Match methods and replace
        if " Scope)" in line or "*Scope)" in line:
            line =  line.replace("Scope", "ScopeType")
            # revert Type0 and Type1 so generated stuff does not complain
            line = line.replace("ExplicitScopeTypes", "ExplicitScopes")
            line = line.replace("OtherScopeTypes", "OtherScopes")
        
        #! Edit3:
        # Rename TypedTransaction0 to TypedTransactionLegacy and
        # TypedTransaction1 to TypedTransactionEip1559.
        line = line.replace("TypedTransaction0", "TypedTransactionLegacy")
        line = line.replace("TypedTransaction1", "TypedTransactionEip1559")


        #! Edit 4:
        # Duplicate/superfluous constant names as a result of single-value enums
        line = line.replace("MfaTypeFidoFido", "Fido")
        line = line.replace("MfaTypeTotpTotp", "Totp")
        line = line.replace("OrgEventFilterAllAll", "AllEvents")
        line = line.replace("ScopeSetAllAll", "AllScopes")

        #! Edit 5:
        # Subfield with oneOf are generated with underscores
        line = line.replace("TypedData_Domain_Salt", "TypedDataDomainSalt")


        newLines.append(line)

    with open(FILENAME, "w+") as f:
        newLinesStrings = "\n".join(newLines)
        f.write(newLinesStrings)
    
    # format the file
    subprocess.run(["gofumpt", "-l", "-w", FILENAME])